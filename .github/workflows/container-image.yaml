name: Container Image

on:
  push:
    tags: ['v*']
    branches: ['master']

env:
  REGISTRY: docker.io
  IMAGE_NAME: melchor9000/traefik-auth

jobs:
  build-binary:
    name: 'Build ${{ matrix.target.arch }} binary'
    runs-on: ${{ matrix.target.runner }}
    container: clux/muslrust:stable
    permissions:
      contents: read
    strategy:
      fail-fast: true
      matrix:
        target:
        - runner: ubuntu-24.04
          arch: x86_64
        - runner: ubuntu-24.04-arm
          arch: aarch64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Build binary
        run: |
          cargo build --release --target $(uname -m)-unknown-linux-musl
          mkdir dist
          cp target/$(uname -m)-unknown-linux-musl/release/traefik-auth dist/traefik-auth-${{ matrix.target.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v5
        with:
          name: binary-${{ matrix.target.arch }}
          path: dist


  # step that merges all artifacts into one
  merge:
    name: 'Merge binaries'
    runs-on: ubuntu-latest
    needs: build-binary
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v5
        with:
          name: binaries
          pattern: binary-*


  build-docker:
    name: 'Build docker image'
    runs-on: ubuntu-latest
    needs: merge
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download binaries
        uses: actions/download-artifact@v6
        with:
          name: binaries
          path: dist/

      - name: Fix permissions
        run: chmod 755 dist/traefik-auth-*

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in into the registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: SOURCE=binary
